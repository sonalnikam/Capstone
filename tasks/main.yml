---
# tasks file for infra_optimization
#- name: install python
#  apt:
#    name: python3
#    state: present

#- name: Install boto for AWS
#  pip:
#    name: boto3
#    state: present

- name: Creating Security Group
  ec2_group:
    name: "{{ sg_name }}"
    description: an example EC2 group
    region: "{{ region }}"
    vpc_id: vpc-79177f12
    aws_secret_key: "{{ secret_key }}"
    aws_access_key: "{{ access_key }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 8080
        to_port: 8080
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
   
- name: creating EC2 instance
  loop: "{{ subnet }}" 
  ec2:
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    key_name: "{{ key }}"
    instance_type: t2.micro
    image: "{{ image }}"
    wait: yes
    group: "{{ sg_name }}"
    count: 1 
    vpc_subnet_id: "{{ item }}"
    assign_public_ip: yes
    region: "{{ region }}"
    state: present
    instance_tags:
        name: webserver
  register: ec2

- debug:
    msg: "{{ item['instance_ids'] }}"
  loop: "{{ ec2.results }}"  

- set_fact:
    id: "{{ id + item['instance_ids'] }}"
  with_items:
    - "{{ ec2.results }}"

- set_fact:
    ip: "{{ ip + item['instances'] }}"
  with_items:
    - "{{ ec2.results }}"

- debug:
    msg: "{{ item.public_ip }}"
  with_items:
    - "{{ ip }}"

- name: Creating Load Balancer
  amazon.aws.ec2_elb_lb:
    name: "{{ lb }}"
    state: present
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    cross_az_load_balancing: "yes"
    region: "{{ region }}"
    scheme: internet-facing
    zones:
      - "{{ region}}a"
      - "{{ region }}b"
    listeners:
      - protocol: http
        load_balancer_port: 80
        instance_port: 80

- name: attaching instnace to Load Balancer
  ec2_elb:
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    instance_id: "{{ item }}"
    ec2_elbs: "{{ lb }}"
    state: present
    region: "{{ region }}"
  loop: "{{ id }}"
